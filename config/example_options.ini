# This is the configuration file for MusicBot. Do not edit this file using Notepad.
# Use Notepad++ or a code editor like Visual Studio Code.
# For help, see: https://just-some-bots.github.io/MusicBot/ 
# 
# This file was generated by MusicBot, it contains all options set to their default values.

[Credentials]
# Discord bot authentication token for your Bot.
# Visit Discord Developer Portal to create a bot App and generate your Token.
# Never publish your bot token!
Token = 

# Provide your own Spotify Client ID to enable MusicBot to interact with Spotify API.
# MusicBot will try to use the web player API (guest mode) if nothing is set here.
# Using your own API credentials grants higher usage limits than guest mode.
Spotify_ClientID = 

# Provide your Spotify Client Secret to enable MusicBot to interact with Spotify API.
# This is required if you set the Spotify_ClientID option above.
Spotify_ClientSecret = 

[Permissions]
# Provide a Discord User ID number to set the owner of this bot.
# The word 'auto' or number 0 will set the owner based on App information.
# Only one owner ID can be set here. Generally, setting 'auto' is recommended.
OwnerID = 0

# A list of Discord User IDs who can use the dev-only commands.
# Warning: dev-only commands can allow arbitrary remote code execution.
# Use spaces to separate multiple IDs.
# Most users should leave this setting blank.
DevIDs = 

# Discord Member IDs for other bots that MusicBot should not ignore.
# Use spaces to separate multiple IDs.
# All bots are ignored by default.
BotExceptionIDs = 

[Chat]
# Command prefix is how all MusicBot commands must be started in Discord messages.
# E.g., if you set this to * the play command is trigger by *play ...
CommandPrefix = !

# Enable using commands with @[YourBotNameHere]
# The CommandPrefix is still available, but can be replaced with @ mention.
CommandsByMention = yes

# ID numbers for text channels that MusicBot should exclusively use for commands.
# This can contain IDs for channels in multiple servers.
# Use spaces to separate multiple IDs.
# All channels are used if this is not set.
BindToChannels = 

# Allow responses in all channels while no specific channel is set for a server.
# Only used when BindToChannels is missing an ID for a server.
AllowUnboundServers = yes

# A list of Voice Channel IDs that MusicBot should automatically join on start up.
# Use spaces to separate multiple IDs.
AutojoinChannels = 

# MusicBot will try to send Now Playing notices directly to the member who requested the song instead of posting in a server channel.
DMNowPlaying = no

# Disable now playing messages for songs played via auto playlist.
DisableNowPlayingAutomatic = no

# Forces MusicBot to use a specific channel to send now playing messages.
# Only one text channel ID can be used per server.
NowPlayingChannels = 

# MusicBot will automatically delete Now Playing messages.
DeleteNowPlaying = yes

[MusicBot]
# Set the log verbosity of MusicBot. Normally this should be set to INFO.
# It can be set to one of the following:
#  CRITICAL, ERROR, WARNING, INFO, DEBUG, VOICEDEBUG, FFMPEG, NOISY, or EVERYTHING
DebugLevel = INFO

# Sets the default volume level MusicBot will play songs at.
# You can use any value from 0 to 1, or 0% to 100% volume.
DefaultVolume = 0.15

# Sets the default speed MusicBot will play songs at.
# Must be a value from 0.5 to 100.0 for ffmpeg to use it.
# A value of 1 is normal playback speed.
# Note: Streamed media does not support speed adjustments.
DefaultSpeed = 1.000

# Number of channel member votes required to skip a song.
# Acts as a minimum when SkipRatio would require more votes.
SkipsRequired = 4

# This percent of listeners in voice must vote for skip.
# If SkipsRequired is lower than the computed value, it will be used instead.
# You can set this from 0 to 1, or 0% to 100%.
SkipRatio = 0.5

# Allow MusicBot to keep downloaded media, or delete it right away.
SaveVideos = yes

# If SaveVideos is enabled, set a limit on how much storage space should be used.
StorageLimitBytes = 0

# If SaveVideos is enabled, set a limit on how long files should be kept.
StorageLimitDays = 0

# If SaveVideos is enabled, never purge auto playlist songs from the cache regardless of limits.
StorageRetainAutoPlay = yes

# Mention the user who added the song when it is played.
NowPlayingMentions = no

# Automatically join the owner if they are in an accessible voice channel when bot starts.
AutoSummon = yes

# Enable MusicBot to automatically play music from the auto playlist when the queue is empty.
UseAutoPlaylist = yes

# Shuffles the auto playlist tracks before playing them.
AutoPlaylistRandom = yes

# Enable automatic skip of auto playlist songs when a user plays a new song.
# This only applies to the current playing song if it was added by the auto playlist.
AutoPlaylistAutoSkip = no

# Remove songs from the auto playlist if they are found in the song block list.
AutoPlaylistRemoveBlocked = no

# MusicBot will automatically pause playback when no users are listening.
AutoPause = yes

# Allow MusicBot to automatically delete messages it sends, after a delay.
# Delay period is controlled by DeleteDelayShort and DeleteDelayLong.
DeleteMessages = yes

# Auto delete valid commands after a delay.
DeleteInvoking = no

# Sets the short period of seconds before deleting messages.
# This period is used by messages that require no further interaction.
DeleteDelayShort = 0:00:30

# Sets the long delay period before deleting messages.
# This period is used by interactive or long-winded messages, like search and help.
DeleteDelayLong = 0:01:00

# Allow MusicBot to save the song queue, so queued songs will survive restarts.
PersistentQueue = yes

# Enable MusicBot to download the next song in the queue while a song is playing.
# Currently this option does not apply to auto playlist or songs added to an empty queue.
PreDownloadNextSong = yes

# Specify a custom message to use as the bot's status. If left empty, the bot
# will display dynamic info about music currently being played in its status instead.
# Status messages may also use the following variables:
#  {n_playing}   = Number of currently Playing music players.
#  {n_paused}    = Number of currently Paused music players.
#  {n_connected} = Number of connected music players, in any player state.
# 
# The following variables give access to information about the player and track.
# These variables may not be accurate in multi-guild bots:
#  {p0_length}   = The total duration of the track, if available. Ex: [2:34]
#  {p0_title}    = The track title for the currently playing track.
#  {p0_url}      = The track URL for the currently playing track.
StatusMessage = 

# If enabled, status messages will report info on paused players.
StatusIncludePaused = no

# If enabled, MusicBot will save the track title to:  data/[Server ID]/current.txt
WriteCurrentSong = no

# Allow the member who requested the song to skip it, bypassing votes.
AllowAuthorSkip = yes

# Tries to use ffmpeg to get volume normalizing options for use in playback.
# This option can cause delay between playing songs, as the whole track must be processed.
UseExperimentalEqualization = no

# Allow MusicBot to format its messages as embeds.
UseEmbeds = yes

# The number of entries to show per-page when using q command to list the queue.
QueueLength = 10

# Enable MusicBot to automatically remove unplayable entries from the auto playlist.
RemoveFromAPOnError = yes

# Display MusicBot config settings in the logs at startup.
ShowConfigOnLaunch = no

# Enable users with the InstaSkip permission to bypass skip voting and force skips.
LegacySkip = no

# If enabled, MusicBot will leave servers if the owner is not in their member list.
LeaveServersWithoutOwner = no

# If enabled, MusicBot will allow commands to have multiple names using data in:  config/aliases.json
UseAlias = yes

# Replace MusicBot name/version in embed footer with custom text.
# Only applied when UseEmbeds is enabled and it is not blank.
CustomEmbedFooter = 

# Completely remove the footer from embeds.
RemoveEmbedFooter = no

# MusicBot will automatically deafen itself when entering a voice channel.
SelfDeafen = yes

# If enabled, MusicBot will leave a voice channel when no users are listening,
# after waiting for a period set in LeaveInactiveVCTimeOut option.
# Listeners are channel members, excluding bots, who are not deafened.
LeaveInactiveVC = no

# Set a period of time to wait before leaving an inactive voice channel.
# You can set this to a number of seconds or phrase like:  4 hours
LeaveInactiveVCTimeOut = 0:05:00

# If enabled, MusicBot will leave the channel immediately when the song queue is empty.
LeaveAfterQueueEmpty = no

# When paused or no longer playing, wait for this amount of time then leave voice.
# You can set this to a number of seconds of phrase like:  15 minutes
# Set it to 0 to disable leaving in this way.
LeavePlayerInactiveFor = 0:00:00

# If enabled, users must indicate search result choices by sending a message instead of using reactions.
SearchList = no

# Sets the default number of search results to fetch when using the search command without a specific number.
DefaultSearchResults = 3

# Allow MusicBot to save a per-server command prefix, and enables the setprefix command.
EnablePrefixPerGuild = no

# If enabled and multiple members are adding songs, MusicBot will organize playback for one song per member.
RoundRobinQueue = no

# Allow MusicBot to use timed pings to detect network outage and availability.
# This may be useful if you keep the bot joined to a channel or playing music 24/7.
# MusicBot must be restarted to enable network testing.
# By default this is disabled.
EnableNetworkChecker = no

# Enable saving all songs played by MusicBot to a global playlist file:  config/playlists/history.txt
# This will contain all songs from all servers.
SavePlayedHistoryGlobal = no

# Enable saving songs played per-server to a playlist file:  %(basename)s[Server ID]%(ext)s
SavePlayedHistoryGuilds = no

# Enable playback of local media files using the play command.
# When enabled, users can use:  `play file://path/to/file.ext`
# to play files from the local MediaFileDirectory path.
EnableLocalMedia = no

# Allow MusicBot to automatically unpause when play commands are used.
UnpausePlayerOnPlay = no

# Experimental, HTTP/HTTPS proxy settings to use with ytdlp media downloader.
# The value set here is passed to `ytdlp --proxy` and aiohttp header checking.
# Leave blank to disable.
YtdlpProxy = 

# Experimental option to set a static User-Agent header in yt-dlp.
# It is not typically recommended by yt-dlp to change the UA string.
# For examples of what you might put here, check the following two links:
#    https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent 
#    https://www.useragents.me/ 
# Leave blank to use default, dynamically generated UA strings.
YtdlpUserAgent = 

# Experimental option to enable yt-dlp to use a YouTube account via OAuth2.
# When enabled, you must use the generated URL and code to authorize an account.
# The authorization token is then stored in the `data//oauth2.token` file.
# This option should not be used when cookies are enabled.
# Using a personal account may not be recommended.
# Set yes to enable or no to disable.
YtdlpUseOAuth2 = no

# Optional YouTube video URL used at start-up for triggering OAuth2 authorization.
# This starts the OAuth2 prompt early, rather than waiting for a song request.
# The URL set here should be an accessible YouTube video URL.
# Authorization must be completed before start-up will continue when this is set.
YtdlpOAuth2URL = 

# Toggle the user block list feature, without emptying the block list.
EnableUserBlocklist = yes

# Enable the song block list feature, without emptying the block list.
EnableSongBlocklist = no

# Potentially reduces CPU usage, but disables volume and speed controls.
# This option will disable UseExperimentalEqualization option as well.
UseOpusAudio = no

[Files]
# An optional file path to a text file listing Discord User IDs, one per line.
UserBlocklistFile = 

# An optional file path to a text file that lists URLs, words, or phrases one per line.
# Any song title or URL that contains any line in the list will be blocked.
SongBlocklistFile = 

# An optional path to a directory containing auto playlist files.
# Each file should contain a list of playable URLs or terms, one track per line.
AutoPlaylistDirectory = 

# An optional directory path where playable media files can be stored.
# All files and sub-directories can then be accessed by using 'file://' as a protocol.
# Example:  file://some/folder/name/file.ext
# Maps to:  ./media/some/folder/name/file.ext
MediaFileDirectory = 

# An optional directory path where MusicBot will store long and short-term cache for playback.
AudioCachePath = 

# Configure automatic log file rotation at restart, and limit the number of files kept.
# When disabled, only one log is kept and its contents are replaced each run.
# Set to 0 to disable.  Maximum allowed number is 100.
LogsMaxKept = 0

# Configure the log file date format used when LogsMaxKept is enabled.
# If left blank, a warning is logged and the default will be used instead.
# Learn more about time format codes from the tables and data here:
#     https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
LogsDateFormat = .ended-%Y-%j-%H%m%S

